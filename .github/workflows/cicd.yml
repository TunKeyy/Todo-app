name: CICD

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ap-southeast-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
  SERVER_PUBLIC_IP: ${{ secrets.AWS_PUBLIC_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        env:
          REGISTRY: ${{ secrets.DOCKER_USERNAME }}
          REPOSITORY: aws-deploy
          IMAGE_TAG: ${{ github.sha }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker Image
        run: docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
      - name: Publish image to docker hub
        run: docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG   

  deploy: 
    needs: build
    runs-on: ubuntu-latest    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy docker image to EC2
        env:
          REGISTRY: ${{ secrets.DOCKER_USERNAME }}
          REPOSITORY: aws-deploy
          IMAGE_TAG: ${{ github.sha }}
          AWS_DEFAULT_REGION: ap-south-1
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_PUBLIC_IP}}
          username: ubuntu
          key: ${{ env.PRIVATE_SSH_KEY}}
          envs: PRIVATE_SSH_KEY,REGISTRY,REPOSITORY,IMAGE_TAG,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_DEFAULT_REGION,AWS_REGION
          script: |-
            sudo apt update
            sudo apt install docker.io -y
            sudo apt install awscli -y
            sudo docker stop myappcontainer || true
            sudo docker rm myappcontainer || true
            sudo docker pull $REGISTRY/$REPOSITORY:$IMAGE_TAG
            sudo docker run -d --name myappcontainer -p 80:80 $REGISTRY/$REPOSITORY:$IMAGE_TAG